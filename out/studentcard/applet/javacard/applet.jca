// converted by version 1.3
// on Wed Jan 05 22:51:10 CET 2022

.package applet {
	.aid 0xA0:0x0:0x0:0x0:0x62:0x3:0x1:0xC:0x6;
	.version 1.0;

	.imports {
		0xA0:0x0:0x0:0x0:0x62:0x1:0x1 1.0;		//javacard/framework
		0xA0:0x0:0x0:0x0:0x62:0x2:0x1 1.1;		//javacardx/crypto
		0xA0:0x0:0x0:0x0:0x62:0x1:0x2 1.1;		//javacard/security
		0xA0:0x0:0x0:0x0:0x62:0x0:0x1 1.0;		//java/lang
	}

	.applet {
		0xA0:0x0:0x0:0x0:0x62:0x3:0x1:0xC:0x6:0x1 TheApplet;
	}

	.constantPool {
		// 0
		instanceFieldRef byte[] TheApplet/dataToCipher;
		// 1
		instanceFieldRef byte[] TheApplet/ciphered;
		// 2
		instanceFieldRef 2.0 TheApplet/secretDESKey;
		// 3
		instanceFieldRef boolean TheApplet/keyDES;
		// 4
		instanceFieldRef 1.1 TheApplet/cDES_ECB_NOPAD_enc;
		// 5
		instanceFieldRef 1.1 TheApplet/cDES_ECB_NOPAD_dec;
		// 6
		instanceFieldRef boolean TheApplet/DES_ECB_NOPAD;
		// 7
		staticFieldRef 0.9 TheApplet/readpin;
		// 8
		virtualMethodRef 0.9.8([BSB)V;		// javacard/framework/OwnerPIN.update([BSB)V
		// 9
		staticFieldRef 0.9 TheApplet/writepin;
		// 10
		virtualMethodRef 0.3.1()V;		// javacard/framework/Applet.register()V
		// 11
		classRef 3.2;		// java/lang/Exception
		// 12
		staticMethodRef 2.13.0(BSZ)Ljavacard/security/Key;;		// javacard/security/KeyBuilder.buildKey(BSZ)Ljavacard/security/Key;
			.descriptor	Ljavacard/security/Key;	2.0;

		// 13
		staticMethodRef 0.3.0()V;		// javacard/framework/Applet.<init>()V
		// 14
		classRef 2.10;		// javacard/security/DESKey
		// 15
		staticFieldRef byte[] TheApplet/theDESKey;
		// 16
		staticMethodRef TheApplet/initKeyDES()V;
		// 17
		staticMethodRef 1.1.0(BZ)Ljavacardx/crypto/Cipher;;		// javacardx/crypto/Cipher.getInstance(BZ)Ljavacardx/crypto/Cipher;
			.descriptor	Ljavacardx/crypto/Cipher;	1.1;

		// 18
		staticMethodRef TheApplet/initDES_ECB_NOPAD()V;
		// 19
		classRef 0.9;		// javacard/framework/OwnerPIN
		// 20
		virtualMethodRef 1.1.3(Ljavacard/security/Key;B)V;		// javacardx/crypto/Cipher.init(Ljavacard/security/Key;B)V
			.descriptor	Ljavacard/security/Key;	2.0;

		// 21
		staticMethodRef 0.9.0(BB)V;		// javacard/framework/OwnerPIN.<init>(BB)V
		// 22
		classRef TheApplet;
		// 23
		staticMethodRef TheApplet/<init>()V;
		// 24
		virtualMethodRef 0.9.2()B;		// javacard/framework/OwnerPIN.getTriesRemaining()B
		// 25
		virtualMethodRef 0.9.5()V;		// javacard/framework/OwnerPIN.reset()V
		// 26
		virtualMethodRef 0.10.6()S;		// javacard/framework/APDU.setIncomingAndReceive()S
		// 27
		virtualMethodRef 0.10.1()[B;		// javacard/framework/APDU.getBuffer()[B
		// 28
		virtualMethodRef 0.9.1([BSB)Z;		// javacard/framework/OwnerPIN.check([BSB)Z
		// 29
		staticMethodRef 0.7.1(S)V;		// javacard/framework/ISOException.throwIt(S)V
		// 30
		virtualMethodRef 0.3.3()Z;		// javacard/framework/Applet.selectingApplet()Z
		// 31
		virtualMethodRef TheApplet/getFileByNumber(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 32
		virtualMethodRef TheApplet/listFilesStored(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 33
		staticMethodRef TheApplet/cipherGeneric(Ljavacard/framework/APDU;Ljavacardx/crypto/Cipher;S)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;
			.descriptor	Ljavacardx/crypto/Cipher;	1.1;

		// 34
		virtualMethodRef TheApplet/writeFileToCard(Ljavacard/framework/APDU;)V;
			.descriptor	Ljavacard/framework/APDU;	0.10;

		// 35
		staticFieldRef byte TheApplet/numFileReq;
		// 36
		staticFieldRef byte[] TheApplet/NVR;
		// 37
		virtualMethodRef TheApplet/getindex(B)S;
		// 38
		staticMethodRef 0.16.1([BS[BSS)S;		// javacard/framework/Util.arrayCopy([BS[BSS)S
		// 39
		virtualMethodRef 0.10.8(SS)V;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
		// 40
		staticFieldRef short TheApplet/nbFiles;
		// 41
		virtualMethodRef 1.1.1([BSS[BS)S;		// javacardx/crypto/Cipher.doFinal([BSS[BS)S
		// 42
		staticFieldRef short TheApplet/index;
		// 43
		staticFieldRef short TheApplet/indexTmp;
	}

	.class public TheApplet 0 extends 0.3 {		// extends javacard/framework/Applet

		.fields {
			private 1.1 cDES_ECB_NOPAD_enc 0;		// Ljavacardx/crypto/Cipher;
			private 1.1 cDES_ECB_NOPAD_dec 1;		// Ljavacardx/crypto/Cipher;
			private 2.0 secretDESKey 2;		// Ljavacard/security/Key;
			private 2.0 secretDES2Key 3;		// Ljavacard/security/Key;
			private 2.0 secretDES3Key 4;		// Ljavacard/security/Key;
			private byte[] dataToCipher 5;		// [B
			private byte[] ciphered 6;		// [B
			 boolean keyDES 7;		// Z
			 boolean DES_ECB_NOPAD 8;		// Z
			 boolean DES_CBC_NOPAD 9;		// Z
			static final short DATAMAXSIZE = 32;		// S
			static short index;		// S
			static short indexTmp;		// S
			static short nbFiles;		// S
			static byte numFileReq;		// B
			static final byte GETFILEBYNUMBER = 38;		// B
			static final byte LISTFILESSTORED = 37;		// B
			private static final byte INS_DES_ECB_NOPAD_ENC = 32;		// B
			private static final byte INS_DES_ECB_NOPAD_DEC = 33;		// B
			static final byte UNCIPHERFILEBYCARD = 19;		// B
			static final byte CIPHERFILEBYCARD = 18;		// B
			static final byte WRITEFILETOCARD = 9;		// B
			static final short SW_VERIFICATION_FAILED = 25344;		// S
			static final short SW_PIN_VERIFICATION_REQUIRED = 25345;		// S
			static final byte[] theDESKey = {-54,-54,-54,-54,-54,-54,-54,-54};		// [B
			static final short NVRSIZE = 1024;		// S
			static byte[] NVR = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};		// [B
			static boolean pinsecurity;		// Z
			static 0.9 writepin;		// Ljavacard/framework/OwnerPIN;
			static 0.9 readpin;		// Ljavacard/framework/OwnerPIN;
		}

		.publicMethodTable 4 {
			equals(Ljava/lang/Object;)Z;
			register()V;
			register([BSB)V;
			selectingApplet()Z;
			deselect()V;
			getShareableInterfaceObject(Ljavacard/framework/AID;B)Ljavacard/framework/Shareable;;
			select()Z;
			process(Ljavacard/framework/APDU;)V;
		}

		.packageMethodTable 0 {
			verify(Ljavacard/framework/OwnerPIN;Ljavacard/framework/APDU;)V;
			getFileByNumber(Ljavacard/framework/APDU;)V;
			listFilesStored(Ljavacard/framework/APDU;)V;
			getindex(B)S;
			uncipherFileByCard(Ljavacard/framework/APDU;)V;
			cipherFileByCard(Ljavacard/framework/APDU;)V;
			writeFileToCard(Ljavacard/framework/APDU;)V;
		}

		.method protected <init>()V 0 {
			.stack 5;
			.locals 2;

				L0:	aload_0;
					invokespecial 13;		// javacard/framework/Applet.<init>()V
					aload_0;
					bspush 8;
					newarray 11;
					dup;
					sconst_0;
					sconst_1;
					bastore;
					dup;
					sconst_1;
					sconst_2;
					bastore;
					dup;
					sconst_2;
					sconst_3;
					bastore;
					dup;
					sconst_3;
					sconst_4;
					bastore;
					dup;
					sconst_4;
					sconst_5;
					bastore;
					dup;
					sconst_5;
					bspush 6;
					bastore;
					dup;
					bspush 6;
					bspush 7;
					bastore;
					dup;
					bspush 7;
					bspush 8;
					bastore;
					putfield_a 0;		// reference applet/TheApplet.dataToCipher
					aload_0;
					bspush 8;
					newarray 11;
					putfield_a 1;		// reference applet/TheApplet.ciphered
					aload_0;
					invokespecial 16;		// applet/TheApplet.initKeyDES()V
					aload_0;
					invokespecial 18;		// applet/TheApplet.initDES_ECB_NOPAD()V
					sconst_4;
					newarray 11;
					dup;
					sconst_0;
					bspush 48;
					bastore;
					dup;
					sconst_1;
					bspush 48;
					bastore;
					dup;
					sconst_2;
					bspush 48;
					bastore;
					dup;
					sconst_3;
					bspush 48;
					bastore;
					astore_1;
					sconst_4;
					newarray 11;
					dup;
					sconst_0;
					bspush 49;
					bastore;
					dup;
					sconst_1;
					bspush 49;
					bastore;
					dup;
					sconst_2;
					bspush 49;
					bastore;
					dup;
					sconst_3;
					bspush 49;
					bastore;
					astore_2;
					new 19;		// javacard/framework/OwnerPIN
					dup;
					sconst_3;
					bspush 8;
					invokespecial 21;		// javacard/framework/OwnerPIN.<init>(BB)V
					putstatic_a 7;		// reference applet/TheApplet.readpin
					getstatic_a 7;		// reference applet/TheApplet.readpin
					aload_1;
					sconst_0;
					sconst_4;
					invokevirtual 8;		// javacard/framework/OwnerPIN.update([BSB)V
					new 19;		// javacard/framework/OwnerPIN
					dup;
					sconst_3;
					bspush 8;
					invokespecial 21;		// javacard/framework/OwnerPIN.<init>(BB)V
					putstatic_a 9;		// reference applet/TheApplet.writepin
					getstatic_a 9;		// reference applet/TheApplet.writepin
					aload_2;
					sconst_0;
					sconst_4;
					invokevirtual 8;		// javacard/framework/OwnerPIN.update([BSB)V
					aload_0;
					invokevirtual 10;		// javacard/framework/Applet.register()V
					return;
		}

		.method private initKeyDES()V {
			.stack 4;
			.locals 1;

				L0:	aload_0;
					sconst_3;
					bspush 64;
					sconst_0;
					invokestatic 12;		// javacard/security/KeyBuilder.buildKey(BSZ)Ljavacard/security/Key;
					putfield_a 2;		// reference applet/TheApplet.secretDESKey
					getfield_a_this 2;		// reference applet/TheApplet.secretDESKey
					checkcast 0 14;		// T_CLASSORINTERFACE javacard/security/DESKey
					getstatic_a 15;		// reference applet/TheApplet.theDESKey
					sconst_0;
					invokeinterface 3 14 5;		// javacard/security/DESKey
					aload_0;
					sconst_1;
					putfield_b 3;		// boolean applet/TheApplet.keyDES
				L1:	goto L3;
				L2:	astore_1;
					aload_0;
					sconst_0;
					putfield_b 3;		// boolean applet/TheApplet.keyDES
				L3:	return;
			.exceptionTable {
				// start_block end_block handler_block catch_type_index
				L0 L1 L2 11;
			}
		}

		.method private initDES_ECB_NOPAD()V {
			.stack 3;
			.locals 1;

				L0:	getfield_b_this 3;		// boolean applet/TheApplet.keyDES
					ifeq L4;
				L1:	aload_0;
					sconst_5;
					sconst_0;
					invokestatic 17;		// javacardx/crypto/Cipher.getInstance(BZ)Ljavacardx/crypto/Cipher;
					putfield_a 4;		// reference applet/TheApplet.cDES_ECB_NOPAD_enc
					aload_0;
					sconst_5;
					sconst_0;
					invokestatic 17;		// javacardx/crypto/Cipher.getInstance(BZ)Ljavacardx/crypto/Cipher;
					putfield_a 5;		// reference applet/TheApplet.cDES_ECB_NOPAD_dec
					getfield_a_this 4;		// reference applet/TheApplet.cDES_ECB_NOPAD_enc
					getfield_a_this 2;		// reference applet/TheApplet.secretDESKey
					sconst_2;
					invokevirtual 20;		// javacardx/crypto/Cipher.init(Ljavacard/security/Key;B)V
					getfield_a_this 5;		// reference applet/TheApplet.cDES_ECB_NOPAD_dec
					getfield_a_this 2;		// reference applet/TheApplet.secretDESKey
					sconst_1;
					invokevirtual 20;		// javacardx/crypto/Cipher.init(Ljavacard/security/Key;B)V
					aload_0;
					sconst_1;
					putfield_b 6;		// boolean applet/TheApplet.DES_ECB_NOPAD
				L2:	goto L4;
				L3:	astore_1;
					aload_0;
					sconst_0;
					putfield_b 6;		// boolean applet/TheApplet.DES_ECB_NOPAD
				L4:	return;
			.exceptionTable {
				// start_block end_block handler_block catch_type_index
				L1 L2 L3 11;
			}
		}

		.method public static install([BSB)V 1 {
			.stack 2;
			.locals 0;

				L0:	new 22;		// applet/TheApplet
					dup;
					invokespecial 23;		// applet/TheApplet.<init>()V
					pop;
					return;
		}

		.method public select()Z 6 {
			.stack 1;
			.locals 0;

				L0:	getstatic_a 7;		// reference applet/TheApplet.readpin
					invokevirtual 24;		// javacard/framework/OwnerPIN.getTriesRemaining()B
					ifeq L2;
				L1:	getstatic_a 9;		// reference applet/TheApplet.writepin
					invokevirtual 24;		// javacard/framework/OwnerPIN.getTriesRemaining()B
					ifne L3;
				L2:	sconst_0;
					sreturn;
				L3:	sconst_1;
					sreturn;
		}

		.method public deselect()V 4 {
			.stack 1;
			.locals 0;

				L0:	getstatic_a 7;		// reference applet/TheApplet.readpin
					invokevirtual 25;		// javacard/framework/OwnerPIN.reset()V
					getstatic_a 9;		// reference applet/TheApplet.writepin
					invokevirtual 25;		// javacard/framework/OwnerPIN.reset()V
					return;
		}

		.method  verify(Ljavacard/framework/OwnerPIN;Ljavacard/framework/APDU;)V 128 {
			.stack 5;
			.locals 1;

			.descriptor	Ljavacard/framework/OwnerPIN;	0.9;
			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_2;
					invokevirtual 26;		// javacard/framework/APDU.setIncomingAndReceive()S
					pop;
					aload_2;
					invokevirtual 27;		// javacard/framework/APDU.getBuffer()[B
					astore_3;
					aload_1;
					aload_3;
					sconst_5;
					aload_3;
					sconst_4;
					baload;
					invokevirtual 28;		// javacard/framework/OwnerPIN.check([BSB)Z
					ifne L2;
				L1:	sspush 25344;
					invokestatic 29;		// javacard/framework/ISOException.throwIt(S)V
				L2:	return;
		}

		.method public process(Ljavacard/framework/APDU;)V 7 {
			.stack 4;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_0;
					invokevirtual 30;		// javacard/framework/Applet.selectingApplet()Z
					sconst_1;
					if_scmpne L2;
				L1:	return;
				L2:	aload_1;
					invokevirtual 27;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
					aload_2;
					sconst_1;
					baload;
					slookupswitch L10 5 9 L9 32 L5 33 L7 37 L4 38 L3;
				L3:	aload_0;
					aload_1;
					invokevirtual 31;		// applet/TheApplet.getFileByNumber(Ljavacard/framework/APDU;)V
					goto L11;
				L4:	aload_0;
					aload_1;
					invokevirtual 32;		// applet/TheApplet.listFilesStored(Ljavacard/framework/APDU;)V
					goto L11;
				L5:	getfield_b_this 6;		// boolean applet/TheApplet.DES_ECB_NOPAD
					ifeq L11;
				L6:	aload_0;
					aload_1;
					getfield_a_this 4;		// reference applet/TheApplet.cDES_ECB_NOPAD_enc
					bspush 64;
					invokespecial 33;		// applet/TheApplet.cipherGeneric(Ljavacard/framework/APDU;Ljavacardx/crypto/Cipher;S)V
					goto L11;
				L7:	getfield_b_this 6;		// boolean applet/TheApplet.DES_ECB_NOPAD
					ifeq L11;
				L8:	aload_0;
					aload_1;
					getfield_a_this 5;		// reference applet/TheApplet.cDES_ECB_NOPAD_dec
					bspush 64;
					invokespecial 33;		// applet/TheApplet.cipherGeneric(Ljavacard/framework/APDU;Ljavacardx/crypto/Cipher;S)V
					goto L11;
				L9:	aload_0;
					aload_1;
					invokevirtual 34;		// applet/TheApplet.writeFileToCard(Ljavacard/framework/APDU;)V
					goto L11;
				L10:	sspush 27904;
					invokestatic 29;		// javacard/framework/ISOException.throwIt(S)V
				L11:	return;
		}

		.method  getFileByNumber(Ljavacard/framework/APDU;)V 129 {
			.stack 8;
			.locals 2;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_1;
					invokevirtual 27;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
					aload_1;
					invokevirtual 26;		// javacard/framework/APDU.setIncomingAndReceive()S
					pop;
					aload_2;
					sconst_2;
					baload;
					sconst_1;
					if_scmpne L2;
				L1:	aload_2;
					sconst_3;
					baload;
					putstatic_b 35;		// byte applet/TheApplet.numFileReq
					aload_2;
					sconst_0;
					aload_2;
					sconst_3;
					baload;
					bastore;
					aload_2;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					aload_0;
					aload_2;
					sconst_3;
					baload;
					invokevirtual 37;		// applet/TheApplet.getindex(B)S
					baload;
					sconst_1;
					sadd;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					getstatic_a 36;		// reference applet/TheApplet.NVR
					aload_0;
					aload_2;
					sconst_3;
					baload;
					invokevirtual 37;		// applet/TheApplet.getindex(B)S
					baload;
					sconst_1;
					sadd;
					baload;
					bastore;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					aload_0;
					aload_2;
					sconst_3;
					baload;
					invokevirtual 37;		// applet/TheApplet.getindex(B)S
					baload;
					sconst_2;
					sadd;
					sstore_3;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					aload_0;
					aload_2;
					sconst_3;
					baload;
					invokevirtual 37;		// applet/TheApplet.getindex(B)S
					sconst_1;
					sadd;
					s2b;
					aload_2;
					sconst_1;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					aload_0;
					aload_2;
					sconst_3;
					baload;
					invokevirtual 37;		// applet/TheApplet.getindex(B)S
					baload;
					invokestatic 38;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					aload_1;
					sconst_0;
					sload_3;
					invokevirtual 39;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
				L2:	aload_2;
					sconst_2;
					baload;
					sconst_2;
					if_scmpne L4;
				L3:	aload_0;
					getstatic_b 35;		// byte applet/TheApplet.numFileReq
					invokevirtual 37;		// applet/TheApplet.getindex(B)S
					bspush 32;
					aload_2;
					sconst_3;
					baload;
					smul;
					sadd;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					aload_0;
					getstatic_b 35;		// byte applet/TheApplet.numFileReq
					invokevirtual 37;		// applet/TheApplet.getindex(B)S
					baload;
					sconst_2;
					sadd;
					sadd;
					sstore_3;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					sload_3;
					aload_2;
					sconst_0;
					bspush 32;
					invokestatic 38;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					aload_1;
					sconst_0;
					bspush 32;
					invokevirtual 39;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
				L4:	return;
		}

		.method  listFilesStored(Ljavacard/framework/APDU;)V 130 {
			.stack 8;
			.locals 2;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_1;
					invokevirtual 27;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
					aload_1;
					invokevirtual 26;		// javacard/framework/APDU.setIncomingAndReceive()S
					pop;
					aload_2;
					sconst_2;
					baload;
					ifne L3;
				L1:	aload_2;
					sconst_3;
					baload;
					ifne L3;
				L2:	aload_2;
					sconst_0;
					getstatic_s 40;		// short applet/TheApplet.nbFiles
					s2b;
					bastore;
					aload_1;
					sconst_0;
					sconst_1;
					invokevirtual 39;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
				L3:	aload_2;
					sconst_2;
					baload;
					sconst_1;
					if_scmpne L5;
				L4:	aload_2;
					sconst_0;
					aload_2;
					sconst_3;
					baload;
					bastore;
					aload_2;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					aload_0;
					aload_2;
					sconst_3;
					baload;
					invokevirtual 37;		// applet/TheApplet.getindex(B)S
					baload;
					sconst_1;
					sadd;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					getstatic_a 36;		// reference applet/TheApplet.NVR
					aload_0;
					aload_2;
					sconst_3;
					baload;
					invokevirtual 37;		// applet/TheApplet.getindex(B)S
					baload;
					sconst_1;
					sadd;
					baload;
					bastore;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					aload_0;
					aload_2;
					sconst_3;
					baload;
					invokevirtual 37;		// applet/TheApplet.getindex(B)S
					baload;
					sconst_2;
					sadd;
					sstore_3;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					aload_0;
					aload_2;
					sconst_3;
					baload;
					invokevirtual 37;		// applet/TheApplet.getindex(B)S
					sconst_1;
					sadd;
					s2b;
					aload_2;
					sconst_1;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					aload_0;
					aload_2;
					sconst_3;
					baload;
					invokevirtual 37;		// applet/TheApplet.getindex(B)S
					baload;
					invokestatic 38;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					aload_1;
					sconst_0;
					sload_3;
					invokevirtual 39;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
				L5:	return;
		}

		.method  getindex(B)S 131 {
			.stack 5;
			.locals 2;

				L0:	sconst_0;
					sstore_2;
					sconst_0;
					sstore_3;
				L1:	sload_3;
					sload_1;
					if_scmpge L3;
				L2:	sload_2;
					sconst_2;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					sload_2;
					baload;
					sadd;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					getstatic_a 36;		// reference applet/TheApplet.NVR
					sload_2;
					baload;
					sconst_1;
					sadd;
					baload;
					bspush 32;
					smul;
					sadd;
					sadd;
					sstore_2;
					sload_3;
					sconst_1;
					sadd;
					s2b;
					sstore_3;
					goto L1;
				L3:	sload_2;
					sreturn;
		}

		.method private cipherGeneric(Ljavacard/framework/APDU;Ljavacardx/crypto/Cipher;S)V {
			.stack 6;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	0.10;
			.descriptor	Ljavacardx/crypto/Cipher;	1.1;

				L0:	aload_1;
					invokevirtual 27;		// javacard/framework/APDU.getBuffer()[B
					astore 4;
					aload_1;
					invokevirtual 26;		// javacard/framework/APDU.setIncomingAndReceive()S
					pop;
					aload_2;
					aload 4;
					sconst_5;
					aload 4;
					sconst_4;
					baload;
					aload 4;
					sconst_5;
					invokevirtual 41;		// javacardx/crypto/Cipher.doFinal([BSS[BS)S
					pop;
					aload_1;
					sconst_5;
					aload 4;
					sconst_4;
					baload;
					invokevirtual 39;		// javacard/framework/APDU.setOutgoingAndSend(SS)V
					return;
		}

		.method  uncipherFileByCard(Ljavacard/framework/APDU;)V 132 {
			.stack 0;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	return;
		}

		.method  cipherFileByCard(Ljavacard/framework/APDU;)V 133 {
			.stack 0;
			.locals 0;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	return;
		}

		.method  writeFileToCard(Ljavacard/framework/APDU;)V 134 {
			.stack 6;
			.locals 1;

			.descriptor	Ljavacard/framework/APDU;	0.10;

				L0:	aload_1;
					invokevirtual 27;		// javacard/framework/APDU.getBuffer()[B
					astore_2;
					aload_1;
					invokevirtual 26;		// javacard/framework/APDU.setIncomingAndReceive()S
					pop;
					aload_2;
					sconst_2;
					baload;
					ifne L3;
				L1:	aload_2;
					sconst_3;
					baload;
					ifne L3;
				L2:	aload_2;
					sconst_4;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					getstatic_s 42;		// short applet/TheApplet.index
					aload_2;
					sconst_4;
					baload;
					sconst_1;
					sadd;
					invokestatic 38;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					getstatic_s 43;		// short applet/TheApplet.indexTmp
					aload_2;
					sconst_4;
					baload;
					sconst_2;
					sadd;
					sadd;
					putstatic_s 43;		// short applet/TheApplet.indexTmp
					goto L7;
				L3:	aload_2;
					sconst_2;
					baload;
					ifne L5;
				L4:	aload_2;
					sconst_5;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					getstatic_s 42;		// short applet/TheApplet.index
					getstatic_s 43;		// short applet/TheApplet.indexTmp
					sadd;
					bspush 32;
					invokestatic 38;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					getstatic_s 43;		// short applet/TheApplet.indexTmp
					aload_2;
					sconst_4;
					baload;
					sadd;
					putstatic_s 43;		// short applet/TheApplet.indexTmp
					goto L7;
				L5:	aload_2;
					sconst_2;
					baload;
					sconst_1;
					if_scmpne L7;
				L6:	aload_2;
					sconst_5;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					getstatic_s 42;		// short applet/TheApplet.index
					getstatic_s 43;		// short applet/TheApplet.indexTmp
					sadd;
					bspush 32;
					invokestatic 38;		// javacard/framework/Util.arrayCopy([BS[BSS)S
					pop;
					getstatic_a 36;		// reference applet/TheApplet.NVR
					getstatic_s 42;		// short applet/TheApplet.index
					getstatic_a 36;		// reference applet/TheApplet.NVR
					getstatic_s 42;		// short applet/TheApplet.index
					baload;
					sconst_1;
					sadd;
					sadd;
					aload_2;
					sconst_3;
					baload;
					bastore;
					getstatic_s 43;		// short applet/TheApplet.indexTmp
					aload_2;
					sconst_4;
					baload;
					sadd;
					putstatic_s 43;		// short applet/TheApplet.indexTmp
					getstatic_s 42;		// short applet/TheApplet.index
					getstatic_s 43;		// short applet/TheApplet.indexTmp
					sadd;
					putstatic_s 42;		// short applet/TheApplet.index
					sconst_0;
					putstatic_s 43;		// short applet/TheApplet.indexTmp
					getstatic_s 40;		// short applet/TheApplet.nbFiles
					sconst_1;
					sadd;
					putstatic_s 40;		// short applet/TheApplet.nbFiles
				L7:	return;
		}

	}

}
